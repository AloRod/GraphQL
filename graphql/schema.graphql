"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
  profiles: [Profile!]! @all
  videos: [Video!]! @all
  hello: String @field (resolver: "App\\GraphQL\\Queries\\Hello")
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)
}

"Account of a person who utilizes this application."
type Profile @model(class: "App\\Models\\RestrictedUser") {
    id: ID!
    fullname: String!
    avatar: String
    avatar_url: String
    user_id: ID
    playlists: [Playlist!]! @belongsToMany
    created_at: DateTime
    updated_at: DateTime
}

type Video {
    id: ID!
    name: String!
    url: String!
    description: String
    user_id: ID
    playlists: [Playlist!]! @belongsToMany
    created_at: DateTime
    updated_at: DateTime
}

type Playlist {
    id: ID!
    name: String!
    admin_id: ID
    videos: [Video!]! @belongsToMany
    profiles: [Profile!]! @belongsToMany(relation: "restrictedUsers")
    videos_count: Int @count(relation: "videos")
    created_at: DateTime
    updated_at: DateTime
}
